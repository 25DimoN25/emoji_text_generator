{"version":3,"sources":["constants/charTable.js","constants/charTable/en.js","constants/charTable/ru.js","constants/charTable/symbols.js","components/Application.js","index.js"],"names":["charTable","Object","objectSpread2","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я"," ","useStyles","makeStyles","card","maxWidth","backgroundColor","popover","padding","Application","_useState","useState","_useState2","slicedToArray","withBorder","setWithBorder","_useState3","_useState4","innerChar","setInnerChar","_useState5","_useState6","outerChar","setOuterChar","_useState7","_useState8","inputText","setInputText","_useState9","_useState10","outputText","setOutputText","_useState11","_useState12","popoverTarget","setPopoverTarget","classes","useEffect","charArrays","toLowerCase","split","map","char","filter","charArray","undefined","rows","R","newOutputText","_sideBorderedRows$","sideBorderedRows","row","Array","of","concat","additionalRow","from","length","flag","join","react_default","createElement","Card","className","CardContent","Grid","container","spacing","item","xs","TextField","label","fullWidth","multiline","variant","value","onClick","event","target","type","select","document","execCommand","currentTarget","Popover","open","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","onChange","FormControlLabel","control","Checkbox","color","checked","ReactDOM","render","getElementById"],"mappings":"8NAIaA,EAASC,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GCJJ,CACdE,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,EAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,EAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,EAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,EAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,EAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,EAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,EAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,EAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,EAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,MCrLA,CACdC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,SAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,SAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,SAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,SAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,IAEjBC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEdC,SAAK,CACD,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,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","file":"static/js/main.8527d9d2.chunk.js","sourcesContent":["import {en} from \"constants/charTable/en\"\r\nimport {ru} from \"constants/charTable/ru\"\r\nimport {symbols} from \"constants/charTable/symbols\"\r\n\r\nexport const charTable = {\r\n    ...en,\r\n    ...ru,\r\n    ...symbols\r\n}\r\n","export const en = {\r\n    \"a\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n    ],\r\n    \"b\": [\r\n        [1, 1, 1, 1, 0],\r\n        [1, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 0],\r\n        [1, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 0],\r\n    ],\r\n    \"c\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 0],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n    ],\r\n    \"d\": [\r\n        [1, 1, 1, 1, 0],\r\n        [1, 0, 0, 1, 1],\r\n        [1, 0, 0, 1, 1],\r\n        [1, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 0],\r\n    ],\r\n    \"e\": [\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n        [1, 1, 1],\r\n    ],\r\n    \"f\": [\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n        [1, 0, 0],\r\n    ],\r\n    \"g\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 0],\r\n        [1, 0, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n    ],\r\n    \"h\": [\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n    ],\r\n    \"i\": [\r\n        [1, 1, 1],\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n        [1, 1, 1],\r\n    ],\r\n    \"j\": [\r\n        [0, 0, 1, 1],\r\n        [0, 0, 0, 1],\r\n        [0, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n    ],\r\n    \"k\": [\r\n        [1, 0, 0, 1],\r\n        [1, 0, 1, 0],\r\n        [1, 1, 0, 0],\r\n        [1, 0, 1, 0],\r\n        [1, 0, 0, 1],\r\n    ],\r\n    \"l\": [\r\n        [1, 0, 0],\r\n        [1, 0, 0],\r\n        [1, 0, 0],\r\n        [1, 0, 0],\r\n        [1, 1, 1],\r\n    ],\r\n    \"m\": [\r\n        [1, 0, 0, 0, 1],\r\n        [1, 1, 0, 1, 1],\r\n        [1, 0, 1, 0, 1],\r\n        [1, 0, 0, 0, 1],\r\n        [1, 0, 0, 0, 1],\r\n    ],\r\n    \"n\": [\r\n        [1, 0, 0, 1],\r\n        [1, 1, 0, 1],\r\n        [1, 0, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n    ],\r\n    \"o\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n    ],\r\n    \"p\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 0],\r\n        [1, 0, 0, 0],\r\n    ],\r\n    \"q\": [\r\n        [1, 1, 1, 1, 0],\r\n        [1, 0, 0, 1, 0],\r\n        [1, 0, 1, 1, 0],\r\n        [1, 0, 0, 1, 0],\r\n        [1, 1, 1, 1, 1],\r\n    ],\r\n    \"r\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n        [1, 0, 1, 0],\r\n        [1, 0, 1, 0],\r\n    ],\r\n    \"s\": [\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n        [1, 1, 1],\r\n        [0, 0, 1],\r\n        [1, 1, 1],\r\n    ],\r\n    \"t\": [\r\n        [1, 1, 1],\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n    ],\r\n    \"u\": [\r\n        [1, 0, 1],\r\n        [1, 0, 1],\r\n        [1, 0, 1],\r\n        [1, 0, 1],\r\n        [1, 1, 1],\r\n    ],\r\n    \"v\": [\r\n        [1, 0, 1],\r\n        [1, 0, 1],\r\n        [1, 0, 1],\r\n        [1, 1, 1],\r\n        [0, 1, 0],\r\n    ],\r\n    \"w\": [\r\n        [1, 0, 0, 0, 1],\r\n        [1, 0, 0, 0, 1],\r\n        [1, 0, 1, 0, 1],\r\n        [1, 1, 1, 1, 1],\r\n        [0, 1, 0, 1, 0],\r\n    ],\r\n    \"x\": [\r\n        [1, 1, 0, 1, 1],\r\n        [0, 1, 1, 1, 0],\r\n        [0, 0, 1, 0, 0],\r\n        [0, 1, 1, 1, 0],\r\n        [1, 1, 0, 1, 1],\r\n    ],\r\n    \"y\": [\r\n        [1, 1, 0, 1, 1],\r\n        [0, 1, 1, 1, 0],\r\n        [0, 0, 1, 0, 0],\r\n        [0, 0, 1, 0, 0],\r\n        [0, 0, 1, 0, 0],\r\n    ],\r\n    \"z\": [\r\n        [1, 1, 1, 1],\r\n        [0, 0, 1, 1],\r\n        [0, 1, 1, 0],\r\n        [1, 1, 0, 0],\r\n        [1, 1, 1, 1],\r\n    ]\r\n}","export const ru = {\r\n    \"а\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n    ],\r\n    \"б\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 0],\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n    ],\r\n    \"в\": [\r\n        [1, 1, 1, 1, 0],\r\n        [1, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 0],\r\n        [1, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 0],\r\n    ],\r\n    \"г\": [\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n        [1, 0, 0],\r\n        [1, 0, 0],\r\n        [1, 0, 0],\r\n    ],\r\n    \"д\": [\r\n        [0, 1, 1, 1, 0],\r\n        [0, 1, 0, 1, 0],\r\n        [0, 1, 0, 1, 0],\r\n        [1, 1, 1, 1, 1],\r\n        [1, 0, 0, 0, 1],\r\n    ],\r\n    \"е\": [\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n        [1, 1, 1],\r\n    ],\r\n    \"ё\": [\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n        [1, 1, 1],\r\n        [1, 0, 0],\r\n        [1, 1, 1],\r\n    ],\r\n    \"ж\": [\r\n        [1, 0, 1, 0, 1],\r\n        [1, 1, 1, 1, 1],\r\n        [0, 1, 1, 1, 0],\r\n        [1, 1, 1, 1, 1],\r\n        [1, 0, 1, 0, 1],\r\n    ],\r\n    \"з\": [\r\n        [1, 1, 1],\r\n        [0, 0, 1],\r\n        [1, 1, 1],\r\n        [0, 0, 1],\r\n        [1, 1, 1],\r\n    ],\r\n    \"и\": [\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 1, 1],\r\n        [1, 1, 0, 1],\r\n        [1, 0, 0, 1],\r\n    ],\r\n    \"й\": [\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 1, 1],\r\n        [1, 1, 0, 1],\r\n        [1, 0, 0, 1],\r\n    ],\r\n    \"к\": [\r\n        [1, 0, 0, 1],\r\n        [1, 0, 1, 0],\r\n        [1, 1, 0, 0],\r\n        [1, 0, 1, 0],\r\n        [1, 0, 0, 1],\r\n    ],\r\n    \"л\": [\r\n        [0, 0, 1, 1],\r\n        [0, 1, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n    ],\r\n    \"м\": [\r\n        [1, 0, 0, 0, 1],\r\n        [1, 1, 0, 1, 1],\r\n        [1, 0, 1, 0, 1],\r\n        [1, 0, 0, 0, 1],\r\n        [1, 0, 0, 0, 1],\r\n    ],\r\n    \"н\": [\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n    ],\r\n    \"о\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n    ],\r\n    \"п\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n    ],\r\n    \"р\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 0],\r\n        [1, 0, 0, 0],\r\n    ],\r\n    \"с\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 0],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n    ],\r\n    \"т\": [\r\n        [1, 1, 1],\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n        [0, 1, 0],\r\n    ],\r\n    \"у\": [\r\n        [1, 0, 1],\r\n        [1, 0, 1],\r\n        [1, 1, 1],\r\n        [0, 0, 1],\r\n        [1, 1, 1],\r\n    ],\r\n    \"ф\": [\r\n        [1, 1, 1, 1, 1],\r\n        [1, 0, 1, 0, 1],\r\n        [1, 0, 1, 0, 1],\r\n        [1, 1, 1, 1, 1],\r\n        [0, 0, 1, 0, 0],\r\n    ],\r\n    \"х\": [\r\n        [1, 1, 0, 1, 1],\r\n        [0, 1, 1, 1, 0],\r\n        [0, 0, 1, 0, 0],\r\n        [0, 1, 1, 1, 0],\r\n        [1, 1, 0, 1, 1],\r\n    ],\r\n    \"ц\": [\r\n        [1, 0, 0, 1, 0],\r\n        [1, 0, 0, 1, 0],\r\n        [1, 0, 0, 1, 0],\r\n        [1, 0, 0, 1, 0],\r\n        [1, 1, 1, 1, 1],\r\n    ],\r\n    \"ч\": [\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n        [0, 0, 0, 1],\r\n        [0, 0, 0, 1],\r\n    ],\r\n    \"ш\": [\r\n        [1, 0, 0, 0, 1],\r\n        [1, 0, 0, 0, 1],\r\n        [1, 0, 1, 0, 1],\r\n        [1, 0, 1, 0, 1],\r\n        [1, 1, 1, 1, 1],\r\n    ],\r\n    \"щ\": [\r\n        [1, 0, 0, 0, 1, 0],\r\n        [1, 0, 0, 0, 1, 0],\r\n        [1, 0, 1, 0, 1, 0],\r\n        [1, 0, 1, 0, 1, 0],\r\n        [1, 1, 1, 1, 1, 1],\r\n    ],\r\n    \"ъ\": [\r\n        [1, 1, 0, 0, 0],\r\n        [0, 1, 0, 0, 0],\r\n        [0, 1, 1, 1, 1],\r\n        [0, 1, 0, 0, 1],\r\n        [0, 1, 1, 1, 1],\r\n    ],\r\n    \"ы\": [\r\n        [1, 0, 0, 0, 1],\r\n        [1, 0, 0, 0, 1],\r\n        [1, 1, 1, 0, 1],\r\n        [1, 0, 1, 0, 1],\r\n        [1, 1, 1, 0, 1],\r\n    ],\r\n    \"ь\": [\r\n        [1, 0, 0, 0],\r\n        [1, 0, 0, 0],\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n    ],\r\n    \"э\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [0, 0, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n    ],\r\n    \"ю\": [\r\n        [1, 0, 0, 1, 1, 0],\r\n        [1, 0, 1, 0, 0, 1],\r\n        [1, 1, 1, 1, 0, 1],\r\n        [1, 0, 1, 0, 0, 1],\r\n        [1, 0, 0, 1, 1, 0],\r\n    ],\r\n    \"я\": [\r\n        [1, 1, 1, 1],\r\n        [1, 0, 0, 1],\r\n        [1, 1, 1, 1],\r\n        [0, 1, 0, 1],\r\n        [0, 1, 0, 1],\r\n    ]\r\n}\r\n","export const symbols = {\r\n    \" \": [\r\n        [0, 0],\r\n        [0, 0],\r\n        [0, 0],\r\n        [0, 0],\r\n        [0, 0],\r\n    ]\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport * as R from 'ramda'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport {charTable} from \"constants/charTable\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\nimport Checkbox from \"@material-ui/core/Checkbox\"\r\nimport Popover from \"@material-ui/core/Popover\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 800,\r\n        backgroundColor: \"#ECEFF1\"\r\n    },\r\n    popover: {\r\n        padding: 20,\r\n        backgroundColor: \"#CFD8DC\"\r\n    },\r\n})\r\n\r\nexport default function Application() {\r\n\r\n    const [withBorder, setWithBorder] = useState(true)\r\n    const [innerChar, setInnerChar] = useState(\"🟥\")\r\n    const [outerChar, setOuterChar] = useState(\"🤍\")\r\n    const [inputText, setInputText] = useState(\"жесть\")\r\n    const [outputText, setOutputText] = useState(\"\")\r\n\r\n    const [popoverTarget, setPopoverTarget] = useState(null)\r\n\r\n    const classes = useStyles()\r\n\r\n    const outputTextClickHandler = event => {\r\n        if (event.target.type === \"textarea\") {\r\n            event.target.select()\r\n            document.execCommand(\"Copy\")\r\n            setPopoverTarget(event.currentTarget)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const charArrays = inputText\r\n            .toLowerCase()\r\n            .split(\"\")\r\n            .map(char => charTable[char])\r\n            .filter(charArray => charArray !== undefined) // ignore unknown chars\r\n\r\n        const rows = R.transpose(charArrays).map(R.pipe(R.intersperse([0]), R.flatten))\r\n\r\n        const newOutputText = (\r\n            withBorder ? (() => {\r\n                const sideBorderedRows = rows.map(row => Array.of(0).concat(row).concat(0))\r\n                const additionalRow = Array.of(Array.from(Array(sideBorderedRows[0]?.length || 0), () => 0))\r\n                return additionalRow.concat(sideBorderedRows).concat(additionalRow)\r\n            })() : (() => {\r\n                return rows\r\n            })()\r\n        ).map(R.pipe(R.map(flag => flag ? innerChar : outerChar), R.join(\"\"))).join(\"\\n\")\r\n\r\n        setOutputText(newOutputText)\r\n    }, [withBorder, innerChar, outerChar, inputText])\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            label=\"output\"\r\n                            fullWidth\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            value={outputText}\r\n                            onClick={outputTextClickHandler}\r\n                        />\r\n                        <Popover\r\n                            open={Boolean(popoverTarget)}\r\n                            anchorEl={popoverTarget}\r\n                            onClose={() => setPopoverTarget(null)}\r\n                            anchorOrigin={{\r\n                                vertical: 'center',\r\n                                horizontal: 'center',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'center',\r\n                                horizontal: 'center',\r\n                            }}\r\n                        >\r\n                            <Typography className={classes.popover}>Copied!</Typography>\r\n                        </Popover>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <TextField\r\n                            label=\"input\"\r\n                            fullWidth\r\n                            value={inputText}\r\n                            onChange={event => setInputText(event.target.value)}\r\n                        />\r\n                        <FormControlLabel\r\n                            label=\"use border\"\r\n                            control={\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    checked={withBorder}\r\n                                    onChange={event => setWithBorder(event.target.checked)}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            label=\"inner\"\r\n                            fullWidth\r\n                            value={innerChar}\r\n                            onChange={event => setInnerChar(event.target.value)}\r\n                        />\r\n                        <TextField\r\n                            label=\"outer\"\r\n                            fullWidth\r\n                            value={outerChar}\r\n                            onChange={event => setOuterChar(event.target.value)}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Application from \"components/Application\"\n\nReactDOM.render(<Application/>, document.getElementById(\"root\"))\n"],"sourceRoot":""}